[{"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/index.js":"1","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/layouts/Admin.js":"2","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/routes.js":"3","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/Sidebar/Sidebar.js":"4","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/Footer/Footer.js":"5","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/FixedPlugin/FixedPlugin.js":"6","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/Navbars/DemoNavbar.js":"7","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/FieldList.js":"8","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/UnitFormUpdate.js":"9","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/RfcFormUpdate.js":"10","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Map.js":"11","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/PostList.js":"12","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/UnitList.js":"13","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/PostForm.js":"14","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/UnitForm.js":"15","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/RfcForm.js":"16","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/InfiniteScroll.js":"17","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/RfcList.js":"18","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Typography.js":"19","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Upgrade.js":"20","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Tables.js":"21","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Dashboard.js":"22","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Notifications.js":"23","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/User.js":"24","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Icons.js":"25","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/variables/charts.js":"26","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/SearchServices.js":"27"},{"size":1296,"mtime":1635123309694,"results":"28","hashOfConfig":"29"},{"size":2939,"mtime":1635123309694,"results":"30","hashOfConfig":"29"},{"size":3833,"mtime":1635272539986,"results":"31","hashOfConfig":"29"},{"size":2941,"mtime":1635123309694,"results":"32","hashOfConfig":"29"},{"size":2144,"mtime":1635123309694,"results":"33","hashOfConfig":"29"},{"size":5938,"mtime":1635123309694,"results":"34","hashOfConfig":"29"},{"size":6255,"mtime":1635123309694,"results":"35","hashOfConfig":"29"},{"size":2253,"mtime":1635123309694,"results":"36","hashOfConfig":"29"},{"size":3055,"mtime":1635272539986,"results":"37","hashOfConfig":"29"},{"size":3454,"mtime":1635272516401,"results":"38","hashOfConfig":"29"},{"size":5159,"mtime":1635123309694,"results":"39","hashOfConfig":"29"},{"size":4319,"mtime":1635123309694,"results":"40","hashOfConfig":"29"},{"size":4793,"mtime":1635123309694,"results":"41","hashOfConfig":"29"},{"size":4921,"mtime":1635123309694,"results":"42","hashOfConfig":"29"},{"size":3904,"mtime":1635272539986,"results":"43","hashOfConfig":"29"},{"size":4422,"mtime":1635123309694,"results":"44","hashOfConfig":"29"},{"size":2746,"mtime":1635304343699,"results":"45","hashOfConfig":"29"},{"size":4791,"mtime":1635272516401,"results":"46","hashOfConfig":"29"},{"size":6402,"mtime":1635123309694,"results":"47","hashOfConfig":"29"},{"size":5744,"mtime":1635123309694,"results":"48","hashOfConfig":"29"},{"size":6089,"mtime":1635123309694,"results":"49","hashOfConfig":"29"},{"size":8208,"mtime":1635123309694,"results":"50","hashOfConfig":"29"},{"size":10664,"mtime":1635123309694,"results":"51","hashOfConfig":"29"},{"size":11970,"mtime":1635123309694,"results":"52","hashOfConfig":"29"},{"size":22770,"mtime":1635123309694,"results":"53","hashOfConfig":"29"},{"size":4664,"mtime":1635123309694,"results":"54","hashOfConfig":"29"},{"size":1164,"mtime":1635272539986,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"8hr6bq",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/index.js",[],["116","117"],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/layouts/Admin.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/routes.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/Sidebar/Sidebar.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/Footer/Footer.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/FixedPlugin/FixedPlugin.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/components/Navbars/DemoNavbar.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/FieldList.js",["118"],"import React from 'react'\nimport axios from 'axios'\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nclass FieldList extends React.Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: [],\n             errorMsg: \"\",\n             count: 0\n        }\n    }\n\n    componentDidMount(){\n        axios.get('https://dms.pgn-solution.co.id/api/v1/fields')\n        .then(response => {\n            console.log(response)\n            this.setState({posts: response.data})\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({errorMsg: \"Error retreiving data\"})\n        })\n    }\n    \n    render() {\n        const { posts, errorMsg } = this.state\n        return (\n            <div className=\"content\">\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">API DMS Get</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                            <Table responsive>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>No</th>\n                                    <th>Body</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    posts.map(post =>\n                                        <tr>\n                                            <td>{this.state.count += 1}</td>\n                                            <td key={post.id}>{post.description_field}</td>\n                                        </tr>\n                                    )\n                                }\n                                </tbody>\n                            </Table>\n                            {errorMsg ? <div>{errorMsg}</div> : null}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default FieldList\n","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/UnitFormUpdate.js",["119"],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/RfcFormUpdate.js",["120"],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Map.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/PostList.js",["121","122"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n  const api = axios.create({\n      baseURL: `https://jsonplaceholder.typicode.com/posts`\n  })\n\nclass PostList extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Terhapus\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: [],\n             errorMsg: \"\",\n             count:0\n        }\n    }\n\n    getPost = async () => {\n        let data = await api.get('/')\n        .then(({data}) => data)\n        this.setState({posts: data, count:0})\n    }\n\n    deletePost = async (id) =>{\n        let data = await api.delete(`/${id}`)\n        .then(response => {\n            return this.notify('tl')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.getPost()\n    }\n\n    componentDidMount(){\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n        .then(response => {\n            console.log(response)\n            this.setState({posts: response.data})\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({errorMsg: \"Error retreiving data\"})\n        })\n    }\n    \n    render() {\n        const { posts, errorMsg } = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">Simple API Get</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                            <Table responsive>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>No</th>\n                                    <th>Title</th>\n                                    <th>Body</th>\n                                    <th>Action</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    posts.map((post, index) =>\n                                        <tr key={index + Math.random()}>\n                                            <td key={index + Math.random()}>{this.state.count += 1}</td>\n                                            <td key={index + Math.random()}>{post.title}</td>\n                                            <td key={index + Math.random()}>{post.body}</td>\n                                            <td key={index + Math.random()}>\n                                                <button onClick={() => this.deletePost(post.id)}>Delete</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                </tbody>\n                            </Table>\n                            {errorMsg ? <div>{errorMsg}</div> : null}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default PostList\n","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/UnitList.js",["123","124","125"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n  const api = axios.create({\n      baseURL: `http://192.168.60.56/api/v1/units`,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-Api-Key': 'Pg4550Lut1oN!'\n     }\n  })\n\nclass UnitList extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Terhapus\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: [],\n             errorMsg: \"\",\n             count:0\n        }\n    }\n\n    getUnit = async () => {\n      let data = await api.get('/')\n      .then(response => {\n          console.log(response.data)\n          this.setState({posts: response.data, count:0})\n      })\n      .catch(error => {\n          console.log(error)\n      })\n    }\n\n    deleteUnit = async (id) =>{\n        let data = await api.delete(`/${id}`)\n        .then(response => {\n            return this.notify('tl')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.getUnit()\n    }\n\n    updateUnit = (id) =>{\n      console.log(id)\n      this.props.history.push(\"unit-form-update/\"+id)\n    }\n\n    componentDidMount(){\n        this.getUnit()\n        setInterval(this.getUnit, 3000); // runs every 1 seconds.\n    }\n    \n    render() {\n        const { posts, errorMsg } = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">API DHS Get</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                            <Table responsive>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>No</th>\n                                    <th>Name</th>\n                                    <th>Created at</th>\n                                    <th>Updated at</th>\n                                    <th>Action</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    posts.map((post, index) =>\n                                        <tr key={index + Math.random()}>\n                                            <td key={index + Math.random()}>{this.state.count += 1}</td>\n                                            <td key={index + Math.random()}>{post.unit_name}</td>\n                                            <td key={index + Math.random()}>{post.created_at}</td>\n                                            <td key={index + Math.random()}>{post.updated_at}</td>\n                                            <td key={index + Math.random()}>\n                                                <button onClick={() => this.updateUnit(post.id)}>Update</button>\n                                                <button onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteUnit(post.id)}}>Delete</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                </tbody>\n                            </Table>\n                            {errorMsg ? <div>{errorMsg}</div> : null}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default UnitList\n","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/PostForm.js",["126"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardTitle,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nclass PostForm extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Tersimpan\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    // ---------------------------------------------\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             userId: '',\n             title: '',\n             body: ''\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    submitHandler = e => {\n        e.preventDefault()\n        console.log(this.state)\n\n        axios.post('https://jsonplaceholder.typicode.com/posts', this.state)\n        .then(response => {\n            console.log(response)\n            return this.notify('tl')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    render() {\n        const {userId, title, body} = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"8\">\n                    <Card className=\"card-user\">\n                    <CardHeader>\n                    <CardTitle tag=\"h5\">Post Form</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                    <Form onSubmit={this.submitHandler}>\n                        <Row>\n                        <Col className=\"pr-1\" md=\"6\">\n                            <FormGroup>\n                            <label>Id</label>\n                            <Input\n                                defaultValue=\"Chet\"\n                                placeholder=\"Company\"\n                                type=\"text\"\n                                name=\"userId\"\n                                value={userId}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        <Col className=\"pl-1\" md=\"6\">\n                            <FormGroup>\n                            <label>Title</label>\n                            <Input\n                                defaultValue=\"Faker\"\n                                placeholder=\"Last Name\"\n                                type=\"text\"\n                                name=\"title\"\n                                value={title}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <Col md=\"12\">\n                            <FormGroup>\n                            <label>Body</label>\n                            <Input\n                                type=\"textarea\"\n                                defaultValue=\"Oh so, your weak rhyme You doubt I'll bother, reading into it\"\n                                name=\"body\"\n                                value={body}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <div className=\"update ml-auto mr-auto\">\n                            <Button\n                            className=\"btn-round\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            >\n                            Submit\n                            </Button>\n                        </div>\n                        </Row>\n                    </Form>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default PostForm\n","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/UnitForm.js",["127","128","129","130"],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/RfcForm.js",["131","132","133","134"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardTitle,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n  const api = axios.create({\n    baseURL: `https://rfc.pgn-solution.co.id/api/v1/api_tests`,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Api-Key': 'Pg4550Lut1oN!'\n   }\n})\n\nclass RfcForm extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Tersimpan\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    // ---------------------------------------------\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             nama: '',\n             alamat: ''\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    postUnit = async () =>{\n      let data = await api.post('/', this.state)\n      .then(response => {\n          console.log(response)\n          return this.notify('tl')\n      })\n      .catch(error => {\n          console.log(error)\n      })\n    }\n\n    submitHandler = e => {\n        e.preventDefault()\n        console.log(this.state)\n        this.postUnit()\n    }\n    \n    render() {\n        const {userId, title, body} = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"8\">\n                    <Card className=\"card-user\">\n                    <CardHeader>\n                    <CardTitle tag=\"h5\">API RFC Post</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                    <Form onSubmit={this.submitHandler}>\n                        <Row>\n                        <Col className=\"pl-1\" md=\"6\">\n                            <FormGroup>\n                            <label>Nama</label>\n                            <Input\n                                defaultValue=\"Faker\"\n                                placeholder=\"Nama\"\n                                type=\"text\"\n                                name=\"nama\"\n                                value={title}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                            <FormGroup>\n                            <label>Alamat</label>\n                            <Input\n                                defaultValue=\"Faker\"\n                                placeholder=\"Alamat\"\n                                type=\"text\"\n                                name=\"alamat\"\n                                value={title}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <div className=\"update ml-auto mr-auto\">\n                            <Button\n                            className=\"btn-round\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            >\n                            Submit\n                            </Button>\n                        </div>\n                        </Row>\n                    </Form>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default RfcForm\n","/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/InfiniteScroll.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/RfcList.js",["135","136","137"],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Typography.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Upgrade.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Tables.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Dashboard.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Notifications.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/User.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/Icons.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/variables/charts.js",[],"/home/pgnsol/project/development/reactjs/reactjs-api-consume/src/views/SearchServices.js",[],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":59,"column":50,"nodeType":"144","endLine":59,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":47,"column":11,"nodeType":"147","endLine":47,"endColumn":13,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"146","line":48,"column":11,"nodeType":"147","endLine":48,"endColumn":13,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":80,"column":13,"nodeType":"152","messageId":"153","endLine":80,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":127,"column":78,"nodeType":"144","endLine":127,"endColumn":88},{"ruleId":"150","severity":1,"message":"151","line":79,"column":11,"nodeType":"152","messageId":"153","endLine":79,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":90,"column":13,"nodeType":"152","messageId":"153","endLine":90,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":136,"column":78,"nodeType":"144","endLine":136,"endColumn":88},{"ruleId":"150","severity":1,"message":"154","line":10,"column":5,"nodeType":"152","messageId":"153","endLine":10,"endColumn":15},{"ruleId":"150","severity":1,"message":"154","line":10,"column":5,"nodeType":"152","messageId":"153","endLine":10,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":86,"column":11,"nodeType":"152","messageId":"153","endLine":86,"endColumn":15},{"ruleId":"150","severity":1,"message":"155","line":103,"column":16,"nodeType":"152","messageId":"153","endLine":103,"endColumn":22},{"ruleId":"150","severity":1,"message":"156","line":103,"column":31,"nodeType":"152","messageId":"153","endLine":103,"endColumn":35},{"ruleId":"150","severity":1,"message":"154","line":10,"column":5,"nodeType":"152","messageId":"153","endLine":10,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":87,"column":11,"nodeType":"152","messageId":"153","endLine":87,"endColumn":15},{"ruleId":"150","severity":1,"message":"155","line":104,"column":16,"nodeType":"152","messageId":"153","endLine":104,"endColumn":22},{"ruleId":"150","severity":1,"message":"156","line":104,"column":31,"nodeType":"152","messageId":"153","endLine":104,"endColumn":35},{"ruleId":"150","severity":1,"message":"151","line":79,"column":11,"nodeType":"152","messageId":"153","endLine":79,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":90,"column":13,"nodeType":"152","messageId":"153","endLine":90,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":136,"column":78,"nodeType":"144","endLine":136,"endColumn":88},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'api' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["159"],["160"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'CardFooter' is defined but never used.","'userId' is assigned a value but never used.","'body' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"161","fix":"163"},"Update the dependencies array to be: [api, props.match.params.id]",{"range":"164","text":"165"},{"range":"166","text":"165"},[1022,1024],"[api, props.match.params.id]",[1050,1052]]