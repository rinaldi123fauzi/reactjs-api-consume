[{"/home/pgnsol/project/development/reactjs-api-consume/src/index.js":"1","/home/pgnsol/project/development/reactjs-api-consume/src/layouts/Admin.js":"2","/home/pgnsol/project/development/reactjs-api-consume/src/routes.js":"3","/home/pgnsol/project/development/reactjs-api-consume/src/components/Footer/Footer.js":"4","/home/pgnsol/project/development/reactjs-api-consume/src/components/Sidebar/Sidebar.js":"5","/home/pgnsol/project/development/reactjs-api-consume/src/components/FixedPlugin/FixedPlugin.js":"6","/home/pgnsol/project/development/reactjs-api-consume/src/components/Navbars/DemoNavbar.js":"7","/home/pgnsol/project/development/reactjs-api-consume/src/views/UnitFormUpdate.js":"8","/home/pgnsol/project/development/reactjs-api-consume/src/views/FieldList.js":"9","/home/pgnsol/project/development/reactjs-api-consume/src/views/Map.js":"10","/home/pgnsol/project/development/reactjs-api-consume/src/views/PostList.js":"11","/home/pgnsol/project/development/reactjs-api-consume/src/views/PostForm.js":"12","/home/pgnsol/project/development/reactjs-api-consume/src/views/UnitList.js":"13","/home/pgnsol/project/development/reactjs-api-consume/src/views/UnitForm.js":"14","/home/pgnsol/project/development/reactjs-api-consume/src/views/RfcList.js":"15","/home/pgnsol/project/development/reactjs-api-consume/src/views/RfcForm.js":"16","/home/pgnsol/project/development/reactjs-api-consume/src/views/Typography.js":"17","/home/pgnsol/project/development/reactjs-api-consume/src/views/Upgrade.js":"18","/home/pgnsol/project/development/reactjs-api-consume/src/views/Tables.js":"19","/home/pgnsol/project/development/reactjs-api-consume/src/views/Dashboard.js":"20","/home/pgnsol/project/development/reactjs-api-consume/src/views/Notifications.js":"21","/home/pgnsol/project/development/reactjs-api-consume/src/views/User.js":"22","/home/pgnsol/project/development/reactjs-api-consume/src/views/RfcFormUpdate.js":"23","/home/pgnsol/project/development/reactjs-api-consume/src/views/Icons.js":"24","/home/pgnsol/project/development/reactjs-api-consume/src/variables/charts.js":"25"},{"size":1296,"mtime":1612756383517,"results":"26","hashOfConfig":"27"},{"size":2939,"mtime":1612756383517,"results":"28","hashOfConfig":"27"},{"size":3629,"mtime":1626042434655,"results":"29","hashOfConfig":"27"},{"size":2144,"mtime":1612756383517,"results":"30","hashOfConfig":"27"},{"size":2941,"mtime":1612756383517,"results":"31","hashOfConfig":"27"},{"size":5938,"mtime":1612756383517,"results":"32","hashOfConfig":"27"},{"size":6255,"mtime":1612756383517,"results":"33","hashOfConfig":"27"},{"size":3327,"mtime":1626096025940,"results":"34","hashOfConfig":"27"},{"size":2253,"mtime":1626090540137,"results":"35","hashOfConfig":"27"},{"size":5159,"mtime":1612756383517,"results":"36","hashOfConfig":"27"},{"size":4319,"mtime":1612756383517,"results":"37","hashOfConfig":"27"},{"size":4921,"mtime":1612756383517,"results":"38","hashOfConfig":"27"},{"size":4793,"mtime":1626091475973,"results":"39","hashOfConfig":"27"},{"size":4096,"mtime":1626096092579,"results":"40","hashOfConfig":"27"},{"size":4791,"mtime":1626042742278,"results":"41","hashOfConfig":"27"},{"size":4422,"mtime":1626042754806,"results":"42","hashOfConfig":"27"},{"size":6402,"mtime":1612756383517,"results":"43","hashOfConfig":"27"},{"size":5744,"mtime":1612756383517,"results":"44","hashOfConfig":"27"},{"size":6089,"mtime":1612756383517,"results":"45","hashOfConfig":"27"},{"size":8208,"mtime":1626044112349,"results":"46","hashOfConfig":"27"},{"size":10664,"mtime":1612756383517,"results":"47","hashOfConfig":"27"},{"size":11970,"mtime":1612756383517,"results":"48","hashOfConfig":"27"},{"size":3454,"mtime":1626042762250,"results":"49","hashOfConfig":"27"},{"size":22770,"mtime":1612756383517,"results":"50","hashOfConfig":"27"},{"size":4664,"mtime":1612756383517,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1u51rej",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/home/pgnsol/project/development/reactjs-api-consume/src/index.js",[],["111","112"],"/home/pgnsol/project/development/reactjs-api-consume/src/layouts/Admin.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/routes.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/components/Footer/Footer.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/components/Sidebar/Sidebar.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/components/FixedPlugin/FixedPlugin.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/components/Navbars/DemoNavbar.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/UnitFormUpdate.js",["113"],"/home/pgnsol/project/development/reactjs-api-consume/src/views/FieldList.js",["114"],"import React from 'react'\nimport axios from 'axios'\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nclass FieldList extends React.Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: [],\n             errorMsg: \"\",\n             count: 0\n        }\n    }\n\n    componentDidMount(){\n        axios.get('https://dms.pgn-solution.co.id/api/v1/fields')\n        .then(response => {\n            console.log(response)\n            this.setState({posts: response.data})\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({errorMsg: \"Error retreiving data\"})\n        })\n    }\n    \n    render() {\n        const { posts, errorMsg } = this.state\n        return (\n            <div className=\"content\">\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">API DMS Get</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                            <Table responsive>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>No</th>\n                                    <th>Body</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    posts.map(post =>\n                                        <tr>\n                                            <td>{this.state.count += 1}</td>\n                                            <td key={post.id}>{post.description_field}</td>\n                                        </tr>\n                                    )\n                                }\n                                </tbody>\n                            </Table>\n                            {errorMsg ? <div>{errorMsg}</div> : null}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default FieldList\n","/home/pgnsol/project/development/reactjs-api-consume/src/views/Map.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/PostList.js",["115","116"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n  const api = axios.create({\n      baseURL: `https://jsonplaceholder.typicode.com/posts`\n  })\n\nclass PostList extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Terhapus\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: [],\n             errorMsg: \"\",\n             count:0\n        }\n    }\n\n    getPost = async () => {\n        let data = await api.get('/')\n        .then(({data}) => data)\n        this.setState({posts: data, count:0})\n    }\n\n    deletePost = async (id) =>{\n        let data = await api.delete(`/${id}`)\n        .then(response => {\n            return this.notify('tl')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.getPost()\n    }\n\n    componentDidMount(){\n        axios.get('https://jsonplaceholder.typicode.com/posts')\n        .then(response => {\n            console.log(response)\n            this.setState({posts: response.data})\n        })\n        .catch(error => {\n            console.log(error)\n            this.setState({errorMsg: \"Error retreiving data\"})\n        })\n    }\n    \n    render() {\n        const { posts, errorMsg } = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">Simple API Get</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                            <Table responsive>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>No</th>\n                                    <th>Title</th>\n                                    <th>Body</th>\n                                    <th>Action</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    posts.map((post, index) =>\n                                        <tr key={index + Math.random()}>\n                                            <td key={index + Math.random()}>{this.state.count += 1}</td>\n                                            <td key={index + Math.random()}>{post.title}</td>\n                                            <td key={index + Math.random()}>{post.body}</td>\n                                            <td key={index + Math.random()}>\n                                                <button onClick={() => this.deletePost(post.id)}>Delete</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                </tbody>\n                            </Table>\n                            {errorMsg ? <div>{errorMsg}</div> : null}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default PostList\n","/home/pgnsol/project/development/reactjs-api-consume/src/views/PostForm.js",["117"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardTitle,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\nclass PostForm extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Tersimpan\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    // ---------------------------------------------\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             userId: '',\n             title: '',\n             body: ''\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    submitHandler = e => {\n        e.preventDefault()\n        console.log(this.state)\n\n        axios.post('https://jsonplaceholder.typicode.com/posts', this.state)\n        .then(response => {\n            console.log(response)\n            return this.notify('tl')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    \n    render() {\n        const {userId, title, body} = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"8\">\n                    <Card className=\"card-user\">\n                    <CardHeader>\n                    <CardTitle tag=\"h5\">Post Form</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                    <Form onSubmit={this.submitHandler}>\n                        <Row>\n                        <Col className=\"pr-1\" md=\"6\">\n                            <FormGroup>\n                            <label>Id</label>\n                            <Input\n                                defaultValue=\"Chet\"\n                                placeholder=\"Company\"\n                                type=\"text\"\n                                name=\"userId\"\n                                value={userId}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        <Col className=\"pl-1\" md=\"6\">\n                            <FormGroup>\n                            <label>Title</label>\n                            <Input\n                                defaultValue=\"Faker\"\n                                placeholder=\"Last Name\"\n                                type=\"text\"\n                                name=\"title\"\n                                value={title}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <Col md=\"12\">\n                            <FormGroup>\n                            <label>Body</label>\n                            <Input\n                                type=\"textarea\"\n                                defaultValue=\"Oh so, your weak rhyme You doubt I'll bother, reading into it\"\n                                name=\"body\"\n                                value={body}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <div className=\"update ml-auto mr-auto\">\n                            <Button\n                            className=\"btn-round\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            >\n                            Submit\n                            </Button>\n                        </div>\n                        </Row>\n                    </Form>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default PostForm\n","/home/pgnsol/project/development/reactjs-api-consume/src/views/UnitList.js",["118","119","120"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n  const api = axios.create({\n      baseURL: `http://192.168.60.56/api/v1/units`,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-Api-Key': 'Pg4550Lut1oN!'\n     }\n  })\n\nclass UnitList extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Terhapus\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: [],\n             errorMsg: \"\",\n             count:0\n        }\n    }\n\n    getUnit = async () => {\n      let data = await api.get('/')\n      .then(response => {\n          console.log(response.data)\n          this.setState({posts: response.data, count:0})\n      })\n      .catch(error => {\n          console.log(error)\n      })\n    }\n\n    deleteUnit = async (id) =>{\n        let data = await api.delete(`/${id}`)\n        .then(response => {\n            return this.notify('tl')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.getUnit()\n    }\n\n    updateUnit = (id) =>{\n      console.log(id)\n      this.props.history.push(\"unit-form-update/\"+id)\n    }\n\n    componentDidMount(){\n        this.getUnit()\n        setInterval(this.getUnit, 3000); // runs every 1 seconds.\n    }\n    \n    render() {\n        const { posts, errorMsg } = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">API DHS Get</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                            <Table responsive>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>No</th>\n                                    <th>Name</th>\n                                    <th>Created at</th>\n                                    <th>Updated at</th>\n                                    <th>Action</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    posts.map((post, index) =>\n                                        <tr key={index + Math.random()}>\n                                            <td key={index + Math.random()}>{this.state.count += 1}</td>\n                                            <td key={index + Math.random()}>{post.unit_name}</td>\n                                            <td key={index + Math.random()}>{post.created_at}</td>\n                                            <td key={index + Math.random()}>{post.updated_at}</td>\n                                            <td key={index + Math.random()}>\n                                                <button onClick={() => this.updateUnit(post.id)}>Update</button>\n                                                <button onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteUnit(post.id)}}>Delete</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                </tbody>\n                            </Table>\n                            {errorMsg ? <div>{errorMsg}</div> : null}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default UnitList\n","/home/pgnsol/project/development/reactjs-api-consume/src/views/UnitForm.js",["121","122","123"],"/home/pgnsol/project/development/reactjs-api-consume/src/views/RfcList.js",["124","125","126"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    Table,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n  const api = axios.create({\n      baseURL: `https://rfc.pgn-solution.co.id/api/v1/api_tests`,\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-Api-Key': 'Pg4550Lut1oN!'\n     }\n  })\n\nclass RfcList extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Terhapus\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             posts: [],\n             errorMsg: \"\",\n             count:0\n        }\n    }\n\n    getUnit = async () => {\n      let data = await api.get('/')\n      .then(response => {\n          console.log(response.data)\n          this.setState({posts: response.data, count:0})\n      })\n      .catch(error => {\n          console.log(error)\n      })\n    }\n\n    deleteUnit = async (id) =>{\n        let data = await api.delete(`/${id}`)\n        .then(response => {\n            return this.notify('tl')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n        this.getUnit()\n    }\n\n    updateUnit = (id) =>{\n      console.log(id)\n      this.props.history.push(\"rfc-form-update/\"+id)\n    }\n\n    componentDidMount(){\n        this.getUnit()\n        setInterval(this.getUnit, 3000); // runs every 1 seconds.\n    }\n    \n    render() {\n        const { posts, errorMsg } = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <CardTitle tag=\"h4\">API RFC Get</CardTitle>\n                            </CardHeader>\n                            <CardBody>\n                            <Table responsive>\n                                <thead className=\"text-primary\">\n                                <tr>\n                                    <th>No</th>\n                                    <th>Nama</th>\n                                    <th>Alamat</th>\n                                    <th>Updated at</th>\n                                    <th>Action</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {\n                                    posts.map((post, index) =>\n                                        <tr key={index + Math.random()}>\n                                            <td key={index + Math.random()}>{this.state.count += 1}</td>\n                                            <td key={index + Math.random()}>{post.nama}</td>\n                                            <td key={index + Math.random()}>{post.alamat}</td>\n                                            <td key={index + Math.random()}>{post.updated_at}</td>\n                                            <td key={index + Math.random()}>\n                                                <button onClick={() => this.updateUnit(post.id)}>Update</button>\n                                                <button onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) this.deleteUnit(post.id)}}>Delete</button>\n                                            </td>\n                                        </tr>\n                                    )\n                                }\n                                </tbody>\n                            </Table>\n                            {errorMsg ? <div>{errorMsg}</div> : null}\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default RfcList\n","/home/pgnsol/project/development/reactjs-api-consume/src/views/RfcForm.js",["127","128","129","130"],"import React from 'react'\nimport axios from 'axios'\nimport NotificationAlert from \"react-notification-alert\";\n\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardFooter,\n    CardTitle,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n  const api = axios.create({\n    baseURL: `https://rfc.pgn-solution.co.id/api/v1/api_tests`,\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'X-Api-Key': 'Pg4550Lut1oN!'\n   }\n})\n\nclass RfcForm extends React.Component {\n    state = {\n        visible: true,\n      };\n      notificationAlert = React.createRef();\n      notify(place) {\n        var color = 2;\n        var type;\n        switch (color) {\n          case 1:\n            type = \"primary\";\n            break;\n          case 2:\n            type = \"success\";\n            break;\n          case 3:\n            type = \"danger\";\n            break;\n          case 4:\n            type = \"warning\";\n            break;\n          case 5:\n            type = \"info\";\n            break;\n          default:\n            break;\n        }\n        var options = {};\n        options = {\n          place: place,\n          message: (\n            <div>\n              <div>\n               Data Tersimpan\n              </div>\n            </div>\n          ),\n          type: type,\n          icon: \"nc-icon nc-bell-55\",\n          autoDismiss: 7,\n        };\n        this.notificationAlert.current.notificationAlert(options);\n      }\n\n    // ---------------------------------------------\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             nama: '',\n             alamat: ''\n        }\n    }\n\n    changeHandler = (e) => {\n        this.setState({[e.target.name]: e.target.value})\n    }\n\n    postUnit = async () =>{\n      let data = await api.post('/', this.state)\n      .then(response => {\n          console.log(response)\n          return this.notify('tl')\n      })\n      .catch(error => {\n          console.log(error)\n      })\n    }\n\n    submitHandler = e => {\n        e.preventDefault()\n        console.log(this.state)\n        this.postUnit()\n    }\n    \n    render() {\n        const {userId, title, body} = this.state\n        return (\n            <div className=\"content\">\n                <NotificationAlert ref={this.notificationAlert} />\n                <Row>\n                    <Col md=\"8\">\n                    <Card className=\"card-user\">\n                    <CardHeader>\n                    <CardTitle tag=\"h5\">API RFC Post</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                    <Form onSubmit={this.submitHandler}>\n                        <Row>\n                        <Col className=\"pl-1\" md=\"6\">\n                            <FormGroup>\n                            <label>Nama</label>\n                            <Input\n                                defaultValue=\"Faker\"\n                                placeholder=\"Nama\"\n                                type=\"text\"\n                                name=\"nama\"\n                                value={title}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                            <FormGroup>\n                            <label>Alamat</label>\n                            <Input\n                                defaultValue=\"Faker\"\n                                placeholder=\"Alamat\"\n                                type=\"text\"\n                                name=\"alamat\"\n                                value={title}\n                                onChange={this.changeHandler}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <div className=\"update ml-auto mr-auto\">\n                            <Button\n                            className=\"btn-round\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            >\n                            Submit\n                            </Button>\n                        </div>\n                        </Row>\n                    </Form>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nexport default RfcForm\n","/home/pgnsol/project/development/reactjs-api-consume/src/views/Typography.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/Upgrade.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/Tables.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/Dashboard.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/Notifications.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/User.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/views/RfcFormUpdate.js",["131"],"import React, {useState,useEffect} from 'react'\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n    Button,\n    Card,\n    CardHeader,\n    CardBody,\n    CardTitle,\n    FormGroup,\n    Form,\n    Input,\n    Row,\n    Col,\n  } from \"reactstrap\";\n\n\n \nexport default function RfcFormUpdate(props) {\n    const api = axios.create({\n        baseURL: `https://rfc.pgn-solution.co.id/api/v1/api_tests`,\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-Api-Key': 'Pg4550Lut1oN!'\n       }\n    \n     })\n\n    const [data, setData] = useState({\n        nama: \"\",\n        alamat: \"\"\n    })\n\n    // ---------------------------------------------\n    useEffect(\n        ()=>{\n            const id = props.match.params.id\n            api.get('/'+id)\n            .then(response => {\n                console.log(response.data)\n                setData(response.data)\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        },[]\n    )\n    let history = useHistory();\n\n    function submit(e){\n        e.preventDefault()\n        const id = props.match.params.id\n        api.put('/'+id,data)\n        .then(response => {\n            console.log(response.data)\n            history.push('../rfc-list')\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n\n    function handle(e){\n        const newdata = {...data}\n        newdata[e.target.name] = e.target.value\n        setData(newdata)\n    }\n\n        return (\n            <div className=\"content\">\n                <Row>\n                    <Col md=\"8\">\n                    <Card className=\"card-user\">\n                    <CardHeader>\n                    <CardTitle tag=\"h5\">API RFC Update</CardTitle>\n                    </CardHeader>\n                    <CardBody>\n                    <Form onSubmit={(e) => submit(e)}>\n                        <Row>\n                        <Col className=\"pl-1\" md=\"6\">\n                            <FormGroup>\n                            <label>Nama</label>\n                            <Input\n                                type=\"text\"\n                                name=\"nama\"\n                                onChange={(e) => handle(e)}\n                                value={data.nama}\n                            />\n                            </FormGroup>\n                            <FormGroup>\n                            <label>Alamat</label>\n                            <Input\n                                type=\"text\"\n                                name=\"alamat\"\n                                onChange={(e) => handle(e)}\n                                value={data.alamat}\n                            />\n                            </FormGroup>\n                        </Col>\n                        </Row>\n                        <Row>\n                        <div className=\"update ml-auto mr-auto\">\n                            <Button\n                            className=\"btn-round\"\n                            color=\"primary\"\n                            type=\"submit\"\n                            >\n                            Submit\n                            </Button>\n                        </div>\n                        </Row>\n                    </Form>\n                    </CardBody>\n                </Card>\n                </Col>\n                </Row>\n            </div>\n        )\n}\n","/home/pgnsol/project/development/reactjs-api-consume/src/views/Icons.js",[],"/home/pgnsol/project/development/reactjs-api-consume/src/variables/charts.js",[],["132","133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":47,"column":11,"nodeType":"140","endLine":47,"endColumn":13,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":59,"column":50,"nodeType":"144","endLine":59,"endColumn":60},{"ruleId":"145","severity":1,"message":"146","line":80,"column":13,"nodeType":"147","messageId":"148","endLine":80,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":127,"column":78,"nodeType":"144","endLine":127,"endColumn":88},{"ruleId":"145","severity":1,"message":"149","line":10,"column":5,"nodeType":"147","messageId":"148","endLine":10,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":79,"column":11,"nodeType":"147","messageId":"148","endLine":79,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":90,"column":13,"nodeType":"147","messageId":"148","endLine":90,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":136,"column":78,"nodeType":"144","endLine":136,"endColumn":88},{"ruleId":"145","severity":1,"message":"149","line":10,"column":5,"nodeType":"147","messageId":"148","endLine":10,"endColumn":15},{"ruleId":"145","severity":1,"message":"150","line":111,"column":16,"nodeType":"147","messageId":"148","endLine":111,"endColumn":22},{"ruleId":"145","severity":1,"message":"151","line":111,"column":31,"nodeType":"147","messageId":"148","endLine":111,"endColumn":35},{"ruleId":"145","severity":1,"message":"146","line":79,"column":11,"nodeType":"147","messageId":"148","endLine":79,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":90,"column":13,"nodeType":"147","messageId":"148","endLine":90,"endColumn":17},{"ruleId":"142","severity":1,"message":"143","line":136,"column":78,"nodeType":"144","endLine":136,"endColumn":88},{"ruleId":"145","severity":1,"message":"149","line":10,"column":5,"nodeType":"147","messageId":"148","endLine":10,"endColumn":15},{"ruleId":"145","severity":1,"message":"146","line":87,"column":11,"nodeType":"147","messageId":"148","endLine":87,"endColumn":15},{"ruleId":"145","severity":1,"message":"150","line":104,"column":16,"nodeType":"147","messageId":"148","endLine":104,"endColumn":22},{"ruleId":"145","severity":1,"message":"151","line":104,"column":31,"nodeType":"147","messageId":"148","endLine":104,"endColumn":35},{"ruleId":"138","severity":1,"message":"139","line":48,"column":11,"nodeType":"140","endLine":48,"endColumn":13,"suggestions":"152"},{"ruleId":"134","replacedBy":"153"},{"ruleId":"136","replacedBy":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'api' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["157"],"react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'CardFooter' is defined but never used.","'userId' is assigned a value but never used.","'body' is assigned a value but never used.",["158"],["155"],["156"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"159","fix":"161"},"Update the dependencies array to be: [api, props.match.params.id]",{"range":"162","text":"163"},{"range":"164","text":"163"},[1022,1024],"[api, props.match.params.id]",[1050,1052]]